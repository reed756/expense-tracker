{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","InitialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26dccf11.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","export default (state, action) => {\n    switch(action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction =>\n                    transaction.id !== action.payload\n                )\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            }\n        default: \n            return state;\n    }\n}","import React, { createContext, useReducer } from \"react\";\nimport AppReducer from './AppReducer';\n\n// Initial State\n\nconst InitialState = {\n    transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(InitialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => { \n    const [state, dispatch] = useReducer(AppReducer, InitialState);\n\n    // Action\n\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload: id\n        })\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload: transaction\n        })\n    }\n\n    return (\n        <GlobalContext.Provider value={{\n            transactions: state.transactions,\n            deleteTransaction,\n            addTransaction\n        }}>\n            {children}\n        </GlobalContext.Provider>\n    )\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n    return (\n        <>\n            <h4>Your Balance</h4>\n            <h1>£{total}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const IncomeExpenses = () => {\n    const { transactions } = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n    const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n    ).toFixed(2);\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Income</h4>\n                <p className=\"money plus\">+£{income}</p>\n            </div>\n            <div>\n                <h4>Expense</h4>\n                <p className=\"money minus\">-£{expense}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Transaction = ({ transaction }) => {\n    const { deleteTransaction } = useContext(GlobalContext);\n    const sign = transaction.amount < 0 ? '-' : '+';\n\n    return (\n        <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n            {transaction.text} <span>{sign}£{Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n        </li>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\nimport { Transaction } from './Transaction';\n\n\nexport const TransactionList = () => {\n\n    const { transactions } = useContext(GlobalContext);\n\n    // console.log(context)\n\n    return (\n        <>\n            <h3>History</h3>\n            <ul className=\"list\">\n                {transactions.map((transaction) => (\n                    <Transaction key={transaction.id} transaction = {transaction}/>\n                )\n                )}\n                {/* <li className=\"minus\">\n                Cash <span>-$400</span><button className=\"delete-btn\">x</button>\n                </li> */}\n            </ul>\n        </>\n    )\n}\n","import React, { useState, useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const AddTransaction = () => {\n\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n    const { addTransaction } = useContext(GlobalContext);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000), \n            text,\n            amount: +amount\n        }\n        addTransaction(newTransaction);\n    }\n\n    return (\n        <>\n            <h3>Add new transaction</h3>\n                <form onSubmit={onSubmit}>\n                    <div className=\"form-control\">\n                    <label htmlFor=\"text\">Text</label>\n                    <input \n                        type=\"text\"\n                        onChange={(e) => setText(e.target.value)}\n                        placeholder=\"Enter text...\"\n                        value={ text }\n                    />\n                    </div>\n                    <div className=\"form-control\">\n                    <label htmlFor=\"amount\"\n                        >Amount <br />\n                        (negative - expense, positive - income)</label\n                    >\n                    <input \n                        type=\"number\" \n                        onChange={(e) => setAmount(e.target.value)}\n                        placeholder=\"Enter amount...\"\n                        value={ amount }\n                    />\n                    </div>\n                    <button className=\"btn\">Add transaction</button>\n                </form>\n        </>\n    )\n}\n","import './App.css';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}